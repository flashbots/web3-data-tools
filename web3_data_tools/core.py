# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['interpolation_search']

# %% ../nbs/00_core.ipynb 4
def interpolation_search(o, target, low=None, high=None, how='left'):
    """Interpolation search algorithm to find the closest value to `target` in the sorted list `o`."""

    assert how in ['left', 'right']

    if low is None:
        low = 0
    if high is None:
        high = len(o)
    
    assert o[low] <= target <= o[high]

    pos = low + ((int(target) - o[low]) * (high - low)) // (o[high] - o[low])

    if o[pos] < target:
        if o[pos + 1] > target:
            if how=='left':
                return pos
            else:
                return pos + 1
        return interpolation_search(o, target, pos + 1, high, how=how)
    else:
        if o[pos - 1] < target:
            if how=='right':
                return pos
            else:
                return pos - 1
        return interpolation_search(o, target, low, pos - 1, how=how)
